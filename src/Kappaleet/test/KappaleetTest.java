package Kappaleet.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import Kappaleet.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.19 12:11:38 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KappaleetTest {


  // Generated by ComTest BEGIN
  /** 
   * testLisaa67 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa67() throws SailoException {    // Kappaleet: 67
    Kappaleet kt = new Kappaleet(); 
    Kappale k1 = new Kappale(), k2 = new Kappale(); 
    assertEquals("From: Kappaleet line: 71", 0, kt.getLkm()); 
    kt.lisaa(k1); assertEquals("From: Kappaleet line: 72", 1, kt.getLkm()); 
    kt.lisaa(k2); assertEquals("From: Kappaleet line: 73", 2, kt.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaId100 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaId100() throws SailoException {    // Kappaleet: 100
    Kappaleet kappaleet = new Kappaleet(); 
    Kappale eka = new Kappale(), toka = new Kappale(), kolmas = new Kappale(); 
    eka.rekisteroi(); toka.rekisteroi(); kolmas.rekisteroi(); 
    int id1 = eka.getKappaleId(); 
    kappaleet.lisaa(eka); kappaleet.lisaa(toka); kappaleet.lisaa(kolmas); 
    assertEquals("From: Kappaleet line: 107", true, kappaleet.annaId(id1  ) == eka); 
    assertEquals("From: Kappaleet line: 108", true, kappaleet.annaId(id1+1) == toka); 
    assertEquals("From: Kappaleet line: 109", true, kappaleet.annaId(id1+2) == kolmas); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista126 
   * @throws SailoException when error
   */
  @Test
  public void testPoista126() throws SailoException {    // Kappaleet: 126
    Kappaleet kappaleet = new Kappaleet(); 
    Kappale eka = new Kappale(), toka = new Kappale(), kolmas = new Kappale(); 
    eka.rekisteroi(); toka.rekisteroi(); kolmas.rekisteroi(); 
    int id1 = eka.getKappaleId(); 
    kappaleet.lisaa(eka); kappaleet.lisaa(toka); kappaleet.lisaa(kolmas); 
    assertEquals("From: Kappaleet line: 133", 1, kappaleet.poista(id1+1)); 
    assertEquals("From: Kappaleet line: 134", null, kappaleet.annaId(id1+1)); assertEquals("From: Kappaleet line: 134", 2, kappaleet.getLkm()); 
    assertEquals("From: Kappaleet line: 135", 1, kappaleet.poista(id1)); assertEquals("From: Kappaleet line: 135", 1, kappaleet.getLkm()); 
    assertEquals("From: Kappaleet line: 136", 0, kappaleet.poista(id1+3)); assertEquals("From: Kappaleet line: 136", 1, kappaleet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsiId156 
   * @throws SailoException when error
   */
  @Test
  public void testEtsiId156() throws SailoException {    // Kappaleet: 156
    Kappaleet kappaleet = new Kappaleet(); 
    Kappale eka = new Kappale(), toka = new Kappale(), kolmas = new Kappale(); 
    eka.rekisteroi(); toka.rekisteroi(); kolmas.rekisteroi(); 
    int id1 = eka.getKappaleId(); 
    kappaleet.lisaa(eka); kappaleet.lisaa(toka); kappaleet.lisaa(kolmas); 
    assertEquals("From: Kappaleet line: 163", 1, kappaleet.etsiId(id1+1)); 
    assertEquals("From: Kappaleet line: 164", 2, kappaleet.etsiId(id1+2)); 
  } // Generated by ComTest END
}
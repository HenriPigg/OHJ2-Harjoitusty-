package Kappaleet.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import Kappaleet.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.13 11:13:11 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KappaleTest {



  // Generated by ComTest BEGIN
  /** testGetKappaleenNimi50 */
  @Test
  public void testGetKappaleenNimi50() {    // Kappale: 50
    Kappale kappale = new Kappale(); 
    kappale.vastaaSickoMode(); 
    assertEquals("From: Kappale line: 53", "SICKO MODE", kappale.getKappaleenNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi215 */
  @Test
  public void testRekisteroi215() {    // Kappale: 215
    Kappale k = new Kappale(); 
    assertEquals("From: Kappale line: 217", 0, k.getKappaleId()); 
    k.rekisteroi(); 
    Kappale k2 = new Kappale(); 
    k2.rekisteroi(); 
    int eka = k.getKappaleId(); 
    int toka = k2.getKappaleId(); 
    assertEquals("From: Kappale line: 223", toka-1, eka); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString238 */
  @Test
  public void testToString238() {    // Kappale: 238
    Kappale kappale = new Kappale(); 
    kappale.parse("   3  |  1   | SICKO MODE"); 
    assertEquals("From: Kappale line: 241", true, kappale.toString().startsWith("3|1|SICKO MODE|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse270 */
  @Test
  public void testParse270() {    // Kappale: 270
    Kappale kappale = new Kappale(); 
    kappale.parse("   3  |  1 | SICKO MODE"); 
    assertEquals("From: Kappale line: 273", 3, kappale.getKappaleId()); 
    assertEquals("From: Kappale line: 274", true, kappale.toString().startsWith("3|1|SICKO MODE|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
    kappale.rekisteroi(); 
    int n = kappale.getKappaleId(); 
    kappale.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    kappale.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Kappale line: 280", n+20+1, kappale.getKappaleId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone301 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone301() throws CloneNotSupportedException {    // Kappale: 301
    Kappale kappale = new Kappale(); 
    kappale.parse("   1  |  1  | SICKO MODE"); 
    Kappale kopio = kappale.clone(); 
    assertEquals("From: Kappale line: 306", kappale.toString(), kopio.toString()); 
    kappale.parse("   2  |  Ankka Tupu   | 123"); 
    assertEquals("From: Kappale line: 308", false, kopio.toString().equals(kappale.toString())); 
  } // Generated by ComTest END
}